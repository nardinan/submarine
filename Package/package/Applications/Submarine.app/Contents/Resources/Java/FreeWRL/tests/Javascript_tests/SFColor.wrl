#VRML V2.0 utf8
#MultiTexture test - images taken from X3D Spec. John Stewart CRC Canada.

Transform { rotation 1 0 0 0.4 translation 0 0 3
	children [
		DEF BOX Transform { children Shape {
			appearance Appearance {
				material DEF MAT Material { }
			} geometry Box { }
		}
	}
	]
}

# a box that the script turns red.
Transform { translation 2.5 2.5 0 children [
		Transform { children Shape {
			appearance Appearance {
				material DEF RED Material { }
			} geometry Box {size 1 1 1 }
		}
	}
	]
}
# a box that the script turns blue
Transform { translation 2.5 0 0 children [
		Transform { children Shape {
			appearance Appearance {
				material DEF BLUE Material { }
			} geometry Box {size 1 1 1 }
		}
	}
	]
}
# a box that the script turns green
Transform { translation 2.5 -2.5 0 children [
		Transform { children Shape {
			appearance Appearance {
				material DEF GREEN Material { }
			} geometry Box {size 1 1 1 }
		}
	}
	]
}

# a box that gets the inverse of the colours
Transform { translation -2.5 2.5 0 children [
		Transform { children Shape {
			appearance Appearance {
				material DEF INVERSE Material { }
			} geometry Box {size 1 1 1 }
		}
	}
	]
}

# a box that gets set via HSV. 
# its value tracks the "red_only" box, that is diagonally located on the screen
Transform { translation -2.5 -2.5 0 children [
		Transform { children Shape {
			appearance Appearance {
				material DEF HSV Material { }
			} geometry Box {size 1 1 1 }
		}
	}
	]
}
# Animation clock
	DEF Clock TimeSensor {
		cycleInterval 4.0
		loop TRUE
	},

# Animation path

	DEF ColorCycler ColorInterpolator {
		key [ 0.0 0.33 0.66  1.0 ]
		keyValue [
			0 0 1
			0 1 0
			1 0 0
			0 0 1
		]
}

DEF SCRIPT Script { 
        eventIn  SFColor set_color
	eventOut SFColor red_only
	eventOut SFColor green_only
	eventOut SFColor blue_only
	eventOut SFColor inverse
	eventOut SFColor hsv

	field SFColor c1 0 0 0
url "vrmlscript: 
function set_color ( frac, tm ) {
	red_only = new SFColor(frac[0],0.0,0.0);
	green_only = new SFColor(0.0,frac[1],0.0);
	blue_only = new SFColor(0.0,0.0,frac[2]);
	inverse = new SFColor(1.0-frac[0], 1.0-frac[1], 1.0-frac[2]);

        var c = new Array(3); c = red_only.getHSV();
        hsv.setHSV (c[0],c[1],c[2]);
}

"}


ROUTE Clock.fraction_changed TO ColorCycler.set_fraction
ROUTE ColorCycler.value_changed TO MAT.set_diffuseColor
ROUTE MAT.diffuseColor_changed TO SCRIPT.set_color
ROUTE SCRIPT.red_only TO RED.set_diffuseColor
ROUTE SCRIPT.green_only TO GREEN.set_diffuseColor
ROUTE SCRIPT.blue_only TO BLUE.set_diffuseColor
ROUTE SCRIPT.inverse TO INVERSE.set_diffuseColor
ROUTE SCRIPT.hsv TO HSV.set_diffuseColor

