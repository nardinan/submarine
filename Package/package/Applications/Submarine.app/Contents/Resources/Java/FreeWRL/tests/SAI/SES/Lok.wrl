#VRML V2.0 utf8

PROTO Lok [ exposedField SFColor    color       .35 .55 .45
	    exposedField SFVec3f    translation 0 0 0
	    exposedField SFRotation rotation    0 0 1 0
	    exposedField SFBool     isActive    FALSE
	    exposedField SFVec3f    inactivePos 0 0 0
	    eventOut     SFTime     touchTime ]
{
Transform {
  children [
  DEF Kessel Transform {
    children [
      Shape {
        appearance DEF Stahl Appearance {
          material Material { diffuseColor IS color }}
        geometry Cylinder {
	    height 3
	    radius .9
	  }
      } # Shape
	Transform {
	  children [
	    Shape {
	      appearance USE Stahl
	      geometry Cone {
		  height .4
		  bottomRadius .9
	      } #Cone
	    } #Shape
	  ] #children
	  translation 0 1.7 0
	} #Transform
    ] # children
    rotation 0 0 1 1.5708
    translation -.5 2.2 0
  } #Transform "Kessel"

  DEF Schornstein Transform {
    children [
	Shape { # Rohr
	  appearance USE Stahl
	  geometry Cylinder {
	    height 1.5
	    radius .15
	  }
	} #Shape "Rohr"
	Transform { # Rohrende
	  children [
	    Shape {
		appearance USE Stahl
		geometry Cone {
		  height .6
		  bottomRadius .3
		} #Cone
	    } #Shape
	  ] #children
	  rotation 1 0 0 3.1416
	  translation 0 .7 0
	} #Transform "Rohrende"
    ] #children
    translation -1.5 3.8 0
  } #Transform Schornstein

  DEF Aufbau Transform {
    children [
	Shape {
	  appearance USE Stahl
	  geometry Sphere {
	    radius 1
	  } #Sphere
	} #Shape
    ] #children
    scale .7 .7 .6
    translation -.2 2.9 0
  } #Transform "Aufbau"

  DEF Zwischenbau Transform {
    children [
#      Shape {
#        appearance USE Stahl
#        geometry Extrusion {
#	    crossSection [ 1.45 .4, 1.45 .3, -1.45 .3,
#				 -1.45 -.3, -1.55 -.3, -1.55 .4, 1.45 .4 ]
#	    spine [ 0 0 1.1, 0 0 -1.1 ]
#        } # Extrusion
#      } # Shape
      Transform {
	children [
          Shape {
            appearance USE Stahl
            geometry Box { size 3 .1 2.2 }
          } # Shape
	] #children
	translation 0 .35 0
      } # Transform
      Transform {
	children [
          Shape {
            appearance USE Stahl
            geometry Box { size .1 .7 2.2 }
          } # Shape
	] #children
	translation -1.5 .05 0
      } # Transform
      Shape {
        appearance USE Stahl
        geometry Box {
	    size 3 .6 1.6
        } # Box
      } # Shape
    ] # children
    translation -.45 1.3 0
  } #Transform "Zwischenbau"

  DEF Unterbau Transform {
    children [
      Shape {
        appearance DEF Unterbaufarbe Appearance {
          material Material { diffuseColor .2 .1 .1 }}
	  geometry Box { size 4 .8 1.4 }
#        geometry Extrusion {
#	    crossSection [ 2    .4,  2 -.2,  1.6 -.4,
#			      -1.6 -.4, -2 -.2, -2    .4 , 2 .4 ]
#	    spine [ 0 0 .7, 0 0 -.7]
#        } # Extrusion
      } # Shape
    ] # children
    translation -.1 .7 0
  } #Transform "Unterbau"

  DEF Raeder Transform {
    children [
	DEF Achse Transform {
	  children [
    	    Transform { # rechtes Rad
	      children [
	        DEF Rad Shape {
	          appearance DEF Radfarbe Appearance {
			material Material { diffuseColor .5 .6 .6 }}
	          geometry Cylinder {
		      radius .5
		      height .1
		    } #Cylinder
		  } #Shape "Rad"
		] # children
		translation 0 .9 0
	    } #Transform "rechtes Rad"

          Transform { #linkes Rad
	      children [ USE Rad ]
	      translation 0 -.9 0
	    }
	    Shape { # die Achse ohne die Raeder
	      appearance #USE Stahl # Unterbaufarbe
		  DEF Stahlgrau Appearance {
		  material Material { diffuseColor .4 .5 .5 }}
	      geometry Cylinder {
		  radius .1
		  height 2.1
		} # Cylinder
	    } # Shape
	  ] # children
        rotation -1 0 0 1.5708
	  translation -.65 0 0
	} #Transform "Achse"
	Transform {
	  children [ USE Achse ]
	  translation 1.3 0 0
	}
    ] #children
    translation -.1 .5 0
  } #Transform "Raeder"

  DEF Kabine Transform {
    children [
      Transform { # rechte Wand
        children [
          DEF Wand Shape {
            appearance USE Stahl
            geometry Box { size .3 1.2 .1 }
#            geometry Extrusion {
#              crossSection [ -.8 -1.3, -.8 1.2, -.7 1.2,-.7 0 ,
#				      .6 0, .7 1.2, .8 1.2, .6 -1.3, -.8 -1.3 ]
#		  spine [ 0 0 .05, 0 0 -.05 ]
#	      } #Extrusion
          } #Shape
        ] # children
#	  translation 0 0 -.95
	  translation -.6 .6 -.95
      } #Transform "rechte Wand"
      Transform { # linke Wand
	  children [ USE Wand ]
#	  translation 0 0 .95
	  translation -.6 .6 .95
	} #Transform "linke Wand"

      Transform { #
	children [
	  Shape { # Bodenwanne
	    appearance USE Stahl
	    geometry Box { size 1.3 1.3 2 }
#	    geometry Extrusion {
#            crossSection [ -.8 -1.3, -.8 0,-.7 0 , -.7 -1.0, .5 -1.0,
#				  .6 0, .7 0, .6 -1.3, -.8 -1.3 ]
#            spine [ 0 0 .9, 0 0 -.9 ]
#	    } #Extrusion
	  } #Shape "Bodenwanne"
	] #children
	translation -.1 -.65 0
      } #Transform
      Transform { # Dach
	children [
	  Shape {
	    appearance USE Stahl
	    geometry Box { size 1.7 .2 2 } #Box
	  } #Shape
	] #children
	translation 0 1.3 0
      } #Transform Dach
    ] # children
    translation 1.75 2.2 0
  } #Transform "Kabine"

  Transform { # vordere Puffer
    children [
	DEF ZweiPuffer Group {
	  children [
	    DEF Puffer Transform {
		children [
	        Shape {
		    appearance USE Stahlgrau
		    geometry Cylinder {
		      radius .07
		      height .4
		    } #Cylinder
	        } #Shape
	        Transform {
		    children [
		      Shape {
		        appearance USE Stahlgrau
		        geometry Cone {
			    bottomRadius .25
			    height .1
		        } #Cone
		      } #Shape
		    ] #children
		    translation 0 .25 0
	        } #Transform
		] #children
		translation 0 0 -.75
	    } #Transform "Puffer"
	    Transform {
		children [ USE Puffer ]
		translation 0 0 1.5
	    } #Transform
	  ] #children
	} #Group "ZweiPuffer"
    ] #children
    rotation 0 0 1 1.5708
    translation -2.1 1.2 0
  } #Transform "vordere Puffer"
  Transform {
    children [ USE ZweiPuffer ]
    rotation 0 0 1 -1.5708
    translation 2.4 1.2 0
  } #Transform

  TouchSensor { touchTime IS touchTime }

  ] #children
  rotation    IS rotation
  translation IS translation
} #Root-Transform
}


#Lok { }


#NavigationInfo { type [ "EXAMINE", "ANY" ] }      # Use the Examine viewer
