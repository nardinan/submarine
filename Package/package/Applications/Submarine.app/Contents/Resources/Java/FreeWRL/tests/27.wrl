#VRML V2.0 utf8

# The original VRML 2.0 bouncing ball.  When you click the ball, it drops onto the
# surface, accelerating as it goes and undergoing a cartoonish deformation.  Sam Chen
# later used this idea to develop a far cooler set of objects bouncing around in a
# room, which I believe was incorporated into the O2 Out-Of-Box Experience.
#
# This version very loosely derived from Clay Graham's robot arm.
#
# Jed Hartman, 4/3/96.
# updated to final 2.0 spec 7/25/97.

Group {
  children  [
    WorldInfo {
      title "Bouncing Ball"
      info [
        "By Jed Hartman, 1996."
      ]
    },
    DirectionalLight { direction  0 -1 0 },
    Viewpoint {
      position 0 0 20
      description "Watch Ball"
    },
    Shape {
      appearance  Appearance {
        material  Material { }
      }
      geometry IndexedFaceSet {
        coord Coordinate {
          point [ 10 -5.5 10,   10 -5.5 -10,
                  -10 -5.5 -10, -10 -5.5 10 ]
        }
        coordIndex [ 0, 1, 2, 3, -1 ]
        color Color { color [ 1 0 0, 0 1 0, 0 0 1, 1 1 1 ] }
        solid FALSE
      }
    },
    Transform {
      translation 8 0 0
      children [
        DEF touchBall Transform {
          children [
            DEF TOUCH TouchSensor { },
            Shape {
              appearance Appearance {
                material DEF COLOR Material {
                  diffuseColor 1 1 0
                }
                texture ImageTexture { url [ "helpers/star.jpg"] }
              }
              geometry Sphere {}
            }
          ]
        }
      ]
    },
    DEF TIME TimeSensor {
      cycleInterval 2.0
    },
    DEF ball_pos PositionInterpolator {
      key [ 0, .1, .2, .3, .4, .46, .5, .54, .6, .7, .8, .9, 1 ]
      keyValue [ 0 0 0, 0 -.196 0, 0 -.784 0, 0 -1.764 0, 0 -3.136 0,
               0 -4.14 0, 0 -4.8 0, 0 -4.14 0,
               0 -3.136 0, 0 -1.764 0, 0 -.784 0, 0 -.196 0, 0 0 0 ]
    },
    DEF ball_deform PositionInterpolator {
      key [ 0, .1, .2, .3, .4, .46, .5, .54, .6, .7, .8, .9, 1 ]
      keyValue [ 1 1 1, .995 1.005 .995, .98 1.02 .98, .955 1.045 .955,
               .92 1.08 .92,
               .895 1.105 .895, 1.3 .7 1.3, .895 1.105 .895,
               .92 1.08 .92, .955 1.045 .955, .98 1.02 .98,
               .995 1.005 .995, 1 1 1 ]
    }
  ]
  ROUTE TOUCH.touchTime TO TIME.set_startTime

  #wire the timer into the interpolators
  ROUTE TIME.fraction_changed TO ball_pos.set_fraction
  ROUTE TIME.fraction_changed TO ball_deform.set_fraction

  #wire the interpolators to the tranform
  ROUTE ball_pos.value_changed TO touchBall.set_translation
  ROUTE ball_deform.value_changed TO touchBall.set_scale
}
