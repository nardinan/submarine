<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.0//EN"
                     "http://www.web3d.org/specifications/x3d-3.0.dtd">
<X3D profile="Immersive" version="3.0"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" xsd:noNamespaceSchemaLocation="http://www.web3d.org/specifications/x3d-3.0.xsd">
  <head>
    <meta content="flowers.x3d" name="filename"/>
    <meta content="John Carlson" name="author"/>
    <meta content="John Carlson" name="transcriber"/>
    <meta content="22 January 2005" name="created"/>
    <meta content="22 January 2005" name="revised"/>
    <meta content="2 mathematical roses in Spherical Dimensions. rho = a + b * cos(c * theta) * cos(d * phi)" name="description"/>
    <meta content="http://coderextreme.net/x3d/flowers.x3d" name="url"/>
    <meta content="manually written" name="generator"/>
  </head>
  <Scene>
    <NavigationInfo type="&quot;EXAMINE&quot; &quot;ANY&quot;"/>
    <Viewpoint description="50 meters away" position="0 0 50"/>
    <Group>
      <DirectionalLight direction="1 1 1"/>
      <Transform translation="8 0 0">
        <Shape>
          <Appearance>
            <Material diffuseColor="0 0.5 1"/>
          </Appearance>
          <IndexedFaceSet DEF="Orbit" creaseAngle="1.57">
            <Coordinate DEF="OrbitCoordinates"/>
          </IndexedFaceSet>
        </Shape>
      </Transform>
      <Transform translation="-8 0 0">
        <Shape>
          <Appearance>
            <Material diffuseColor="1 0.5 0"/>
          </Appearance>
          <IndexedFaceSet DEF="Orbit2" creaseAngle="1.57">
            <Coordinate DEF="OrbitCoordinates2"/>
          </IndexedFaceSet>
        </Shape>
      </Transform>
      <TimeSensor DEF='Clock' loop='true'/> 
      <Script DEF="OrbitAnimate">
        <field accessType="inputOnly" name="set_fraction" type="SFFloat"/>
        <field accessType="outputOnly" name="coordinates3" type="MFVec3f"/>
        <field accessType="inputOutput" name="e" type="SFFloat" value="5"/>
        <field accessType="inputOutput" name="f" type="SFFloat" value="5"/>
        <field accessType="inputOutput" name="g" type="SFFloat" value="5"/>
        <field accessType="inputOutput" name="h" type="SFFloat" value="5"/>
 <![CDATA[

ecmascript:

function set_fraction(fraction, eventTime) {
	choice = Math.floor(Math.random() * 4);
	switch (choice) {
	case 0:
		e += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 1:
		f += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 2:
		g += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 3:
		h += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	}
	if (f < 1) {
		f = 10;
	}
	if (g < 1) {
		g = 4;
	}
	if (h < 1) {
		h = 4;
	}
	resolution = 100;
     theta = 0.0;
     phi = 0.0;
     delta = (2 * 3.141592653) / (resolution-1);
     for ( i = 0; i < resolution; i++) {
     	for ( j = 0; j < resolution; j++) {
		rho = e + f * Math.cos(g * theta) * Math.cos(h * phi);
		coordinates3[i*resolution+j][0] = rho * Math.cos(phi) * Math.cos(theta);
		coordinates3[i*resolution+j][1] = rho * Math.cos(phi) * Math.sin(theta);
		coordinates3[i*resolution+j][2] = rho * Math.sin(phi);
		theta += delta;
	}
	phi += delta;
     }
}
]]> 
      </Script>

      <Script DEF="OrbitAnimate2">
        <field accessType="inputOnly" name="set_fraction" type="SFFloat"/>
        <field accessType="outputOnly" name="coordinates4" type="MFVec3f"/>
        <field accessType="inputOutput" name="e" type="SFFloat" value="5"/>
        <field accessType="inputOutput" name="f" type="SFFloat" value="5"/>
        <field accessType="inputOutput" name="g" type="SFFloat" value="5"/>
        <field accessType="inputOutput" name="h" type="SFFloat" value="5"/>
 <![CDATA[

ecmascript:

function set_fraction(fraction, eventTime) {
	choice = Math.floor(Math.random() * 4);
	switch (choice) {
	case 0:
		e += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 1:
		f += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 2:
		g += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 3:
		h += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	}
	if (f < 1) {
		f = 10;
	}
	if (g < 1) {
		g = 4;
	}
	if (h < 1) {
		h = 4;
	}
	resolution = 100;
     theta = 0.0;
     phi = 0.0;
     delta = (2 * 3.141592653) / (resolution-1);
     for ( i = 0; i < resolution; i++) {
     	for ( j = 0; j < resolution; j++) {
		rho = e + f * Math.cos(g * theta) * Math.cos(h * phi);
		coordinates4[i*resolution+j][0] = rho * Math.cos(phi) * Math.cos(theta);
		coordinates4[i*resolution+j][1] = rho * Math.cos(phi) * Math.sin(theta);
		coordinates4[i*resolution+j][2] = rho * Math.sin(phi);
		theta += delta;
	}
	phi += delta;
     }
}
]]> 
      </Script>
      <Script DEF="OrbitScript">
        <field accessType="outputOnly" name="coordinates1" type="MFVec3f"/>
        <field accessType="outputOnly" name="coordIndexes1" type="MFInt32"/>
        <field accessType="initializeOnly" name="a" type="SFFloat" value="0"/>
        <field accessType="initializeOnly" name="b" type="SFFloat" value="5"/>
        <field accessType="initializeOnly" name="c" type="SFFloat" value="2"/>
        <field accessType="initializeOnly" name="d" type="SFFloat" value="2"/>
 <![CDATA[

ecmascript:

function initialize() {
	resolution = 100;
	generateCoordinates(a, b, c, d, resolution);
}

function generateCoordinates(a, b, c, d, resolution) {
     theta = 0.0;
     phi = 0.0;
     delta = (2 * 3.141592653) / (resolution-1);
     for ( i = 0; i < resolution; i++) {
     	for ( j = 0; j < resolution; j++) {
		rho = a + b * Math.cos(c * theta) * Math.cos(d * phi);
		coordinates1[i*resolution+j][0] = rho * Math.cos(phi) * Math.cos(theta);
		coordinates1[i*resolution+j][1] = rho * Math.cos(phi) * Math.sin(theta);
		coordinates1[i*resolution+j][2] = rho * Math.sin(phi);
		theta += delta;
	}
	phi += delta;
     }

     ci = 0;
     for ( i = 0; i < resolution-1; i++) {
     	for ( j = 0; j < resolution-1; j++) {
	     coordIndexes1[ci] = i*resolution+j;
	     coordIndexes1[ci+1] = i*resolution+j+1;
	     coordIndexes1[ci+2] = (i+1)*resolution+j+1;
	     coordIndexes1[ci+3] = (i+1)*resolution+j;
	     coordIndexes1[ci+4] = -1;
	     ci += 5;
	}
    }
}


]]> 
      </Script>
      <Script DEF="OrbitScript2">
        <field accessType="outputOnly" name="coordinates2" type="MFVec3f"/>
        <field accessType="outputOnly" name="coordIndexes2" type="MFInt32"/>
        <field accessType="initializeOnly" name="a" type="SFFloat" value="3"/>
        <field accessType="initializeOnly" name="b" type="SFFloat" value="5"/>
        <field accessType="initializeOnly" name="c" type="SFFloat" value="4"/>
        <field accessType="initializeOnly" name="d" type="SFFloat" value="4"/>
 <![CDATA[

ecmascript:

function initialize() {
	generateCoordinates(a, b, c, d);
}

function generateCoordinates(a, b, c, d) {
     theta = 0.0;
     phi = 0.0;
     resolution = 100;
     delta = (2 * 3.141592653) / (resolution-1);
     for ( i = 0; i < resolution; i++) {
     	for ( j = 0; j < resolution; j++) {
		rho = a + b * Math.cos(c * theta) * Math.cos(d * phi);
		coordinates2[i*resolution+j][0] = rho * Math.cos(phi) * Math.cos(theta);
		coordinates2[i*resolution+j][1] = rho * Math.cos(phi) * Math.sin(theta);
		coordinates2[i*resolution+j][2] = rho * Math.sin(phi);
		theta += delta;
	}
	phi += delta;
     }

     ci = 0;
     for ( i = 0; i < resolution-1; i++) {
     	for ( j = 0; j < resolution-1; j++) {
	     coordIndexes2[ci] = i*resolution+j;
	     coordIndexes2[ci+1] = i*resolution+j+1;
	     coordIndexes2[ci+2] = (i+1)*resolution+j+1;
	     coordIndexes2[ci+3] = (i+1)*resolution+j;
	     coordIndexes2[ci+4] = -1;
	     ci += 5;
	}
    }
}

]]> 
      </Script>
    </Group>
    <ROUTE fromField="coordIndexes1" fromNode="OrbitScript"
      toField="set_coordIndex" toNode="Orbit"/>
    <ROUTE fromField="coordinates1" fromNode="OrbitScript"
      toField="set_point" toNode="OrbitCoordinates"/>
    <ROUTE fromField="coordIndexes2" fromNode="OrbitScript2"
      toField="set_coordIndex" toNode="Orbit2"/>
    <ROUTE fromField="coordinates2" fromNode="OrbitScript2"
      toField="set_point" toNode="OrbitCoordinates2"/>

    <ROUTE fromField="fraction_changed" fromNode="Clock"
      toField="set_fraction" toNode="OrbitAnimate"/>
    <ROUTE fromField="coordinates3" fromNode="OrbitAnimate"
      toField="set_point" toNode="OrbitCoordinates"/>
    <ROUTE fromField="fraction_changed" fromNode="Clock"
      toField="set_fraction" toNode="OrbitAnimate2"/>
    <ROUTE fromField="coordinates4" fromNode="OrbitAnimate2"
      toField="set_point" toNode="OrbitCoordinates2"/>
  </Scene>
</X3D>
