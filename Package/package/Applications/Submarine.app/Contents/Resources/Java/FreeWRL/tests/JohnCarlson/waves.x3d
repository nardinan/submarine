<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.0//EN"
                     "http://www.web3d.org/specifications/x3d-3.0.dtd">
<X3D profile="Immersive" version="3.0"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" xsd:noNamespaceSchemaLocation="http://www.web3d.org/specifications/x3d-3.0.xsd">
  <head>
    <meta content="waves.x3d" name="filename"/>
    <meta content="John Carlson" name="author"/>
    <meta content="John Carlson" name="transcriber"/>
    <meta content="23 January 2005" name="created"/>
    <meta content="23 January 2005" name="revised"/>
    <meta
      content="A fake simulation of something hitting a pool of water" name="description"/>
    <meta content="http://coderextreme.net/x3d/waves.x3d" name="url"/>
    <meta content="manually written" name="generator"/>
  </head>
  <Scene>
    <NavigationInfo type="&quot;EXAMINE&quot; &quot;ANY&quot;"/>
    <Viewpoint description="Pool of Water" orientation="0 -5 5 0" position="0 5 20"/>
    <Group>
      <DirectionalLight direction="-1 -1 -1"/>
      <Transform>
        <Shape>
          <Appearance>
            <Material diffuseColor="0 0.5 1"/>
          </Appearance>
          <IndexedFaceSet DEF="Wave" creaseAngle="1.57">
            <Coordinate DEF="WaveCoordinates"/>
          </IndexedFaceSet>
        </Shape>
      </Transform>
      <TimeSensor DEF="Clock" cycleInterval="20" loop="true"/>
      <Script DEF="WaveAnimate">
        <field accessType="inputOnly" name="set_fraction" type="SFFloat"/>
        <field accessType="outputOnly" name="coordinates1" type="MFVec3f"/>
        <field accessType="outputOnly" name="coordIndexes1" type="MFInt32"/>
        <field accessType="initializeOnly" name="resolution"
type="SFInt32" value="50"/><![CDATA[

ecmascript:

function initialize() {
        generateCoordinates();

	// set coordinate indices
	var localcoordIndexes = new MFInt32();
        ci = 0;
        for ( i = 0; i < resolution-1; i++) {
     	  for ( j = 0; j < resolution-1; j++) {
	     localcoordIndexes[ci] = i*resolution+j;
	     localcoordIndexes[ci+1] = i*resolution+j+1;
	     localcoordIndexes[ci+2] = (i+1)*resolution+j+1;
	     localcoordIndexes[ci+3] = (i+1)*resolution+j;
	     localcoordIndexes[ci+4] = -1;
	     ci += 5;
	  }
        }
	// pick first frame
	set_fraction(0, 0);
        coordIndexes1 = localcoordIndexes;
}

// show current frame
function set_fraction(f, eventTime) {
    var localcoordinates = new MFVec3f();
    k = Math.round(f*20);
    for ( i = 0; i < resolution; i++) {
	for ( j = 0; j < resolution; j++) {
	    var cind = i*resolution+j;
	    var ind = k*resolution*resolution+cind;
	    localcoordinates[cind][0] = crd[ind][0];
	    localcoordinates[cind][1] = crd[ind][1];
	    localcoordinates[cind][2] = crd[ind][2];
	}
    }
    coordinates1 = localcoordinates;
}

function generateCoordinates() {
 	crd = new MFVec3f();
	for (k = 0; k <= 20; k++) {
	     // can't find a good example in my numerical analysis book,		     //so I'll just fake it
	     var f = k / 20.0;
	     var pi = 3.141592653;
	     var radius = 4 * pi;
	     var x = -radius;
	     var z = -radius;
	     delta = (2 * radius) / (resolution-1);
	     for ( i = 0; i < resolution; i++) {
		z = -radius;
		for ( j = 0; j < resolution; j++) {
			var ind = k*resolution*resolution+i*resolution+j;
			crd[ind][0] = x;
			crd[ind][1] = Math.sin(7*Math.sqrt((x*x+z*z)*(1-f)))/(1+(Math.sqrt(x*x+z*z)-f*radius)*(Math.sqrt(x*x+z*z)-f*radius))/(1+Math.sqrt(x*x+z*z)); 

			crd[ind][2] = z;
			z += delta;
		}
		x += delta;
	     }
	}
}

      ]]></Script>
    </Group>
    <ROUTE fromField="coordIndexes1" fromNode="WaveAnimate"
      toField="set_coordIndex" toNode="Wave"/>
    <ROUTE fromField="coordinates1" fromNode="WaveAnimate"
      toField="set_point" toNode="WaveCoordinates"/>
    <ROUTE fromField="fraction_changed" fromNode="Clock"
      toField="set_fraction" toNode="WaveAnimate"/>
  </Scene>
</X3D>
