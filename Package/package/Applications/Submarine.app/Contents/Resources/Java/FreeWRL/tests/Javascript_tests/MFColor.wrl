#VRML V2.0 utf8

Transform {
	translation -2.2 0 0
	children [
		DEF LEFTBOX Transform { children Shape {
			appearance Appearance {
				material DEF LEFTAPP Material { }
			}
			geometry Box { }
		}
	}

	]
}

Transform {
	translation 2.2 0 0
	children [
		DEF RIGHTBOX Transform { children Shape {
			appearance Appearance {
				material DEF RIGHTAPP Material { }
			}
			geometry Box { }
		}
	}

	]
}


# Animation clock
DEF Clock TimeSensor {
	cycleInterval 2.0
	loop TRUE
},

# Left box 
DEF LEFTPATH ColorInterpolator {
	key [ 0.0 0.5 1.0 ]
	keyValue [ 1 0 0, 1 0 0, 1 0 0 ]
}

# Right box 
DEF RIGHTPATH ColorInterpolator {
	key [ 0.0 0.5 1.0 ]
	keyValue [ 1 0 0, 1 0 0, 1 0 0 ]
}

DEF SCRIPT Script {
	eventIn  SFFloat set_fraction 
	eventOut MFColor newOrit

	eventIn MFColor leftBoxChanged
	eventOut MFColor rightOrit

url "vrmlscript: 
function initialize () {
	newOrit = new MFColor( new SFColor(0.0, 0.0, 0.0),
		new SFColor(0.0, 0.5, 0.5),
		new SFColor(0.0, 1.0, 1.0));
}

function leftBoxChanged (val, tm) {
	//print ('length ' + val.length);
	for (x=0; x<val.length; x++) {
		val[x][0] = val[x][2];
		val[x][2] = 0.0;
		//print ('element ' + x + ' is  ' + val[x]);
	}
	rightOrit = val;
}
"}

ROUTE SCRIPT.newOrit TO LEFTPATH.set_keyValue
ROUTE SCRIPT.rightOrit TO RIGHTPATH.set_keyValue

ROUTE Clock.fraction_changed TO LEFTPATH.set_fraction
ROUTE Clock.fraction_changed TO RIGHTPATH.set_fraction

ROUTE LEFTPATH.value_changed TO LEFTAPP.set_diffuseColor
ROUTE LEFTPATH.keyValue_changed TO SCRIPT.leftBoxChanged
ROUTE RIGHTPATH.value_changed TO RIGHTAPP.set_diffuseColor
